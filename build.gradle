plugins{
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.9'

    id 'org.beryx.jlink' version '2.22.0' // For executable file
}

javafx{
	version = "15.0.1"
	modules = ['javafx.controls', 'javafx.fxml']
}

repositories{
	mavenCentral()
}

ext {
    junitVersion = '5.7.1'
}

test {
	useJUnitPlatform()
	testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped"]
        //showStandardStreams = true
    }
}


dependencies {
	testImplementation 'org.json:json:20210307'
	implementation 'org.json:json:20210307'
	implementation 'com.squareup.okhttp3:okhttp:3.14.6'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
	implementation('org.controlsfx:controlsfx:11.1.0')
	implementation 'org.testfx:testfx-core:4.0.16-alpha'
	implementation 'org.loadui:testFx:3.1.2'

	implementation ("org.testfx:testfx-junit5:4.0.16-alpha") 
	testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testImplementation 'org.mockito:mockito-core:2.8.9'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.7.7'
}

mainClassName = 'Gui.Main'


task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'Gui.Main'
  }
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  archiveClassifier = "all"
  from {
    //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
  with jar
}

jlink {
    launcher {
        name = 'exe_name'
    }
}
